# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test_designed.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time
from datetime import date
from this import s

from PyQt5.QtWidgets import QAbstractItemView, QTableWidgetItem

import shujuku2
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QUrl, QDate
from PyQt5.QtWebEngineWidgets import *


class Ui_mytest(object):
    def setupUi(self, mytest):
        mytest.setObjectName("mytest")
        mytest.resize(1187, 870)
        self.groupBox = QtWidgets.QGroupBox(mytest)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 471, 52))
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.checkBox = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        self.horizontalLayout.addWidget(self.checkBox)
        self.dateEdit = QtWidgets.QDateEdit(self.groupBox)
        self.dateEdit.setObjectName("dateEdit")
        self.horizontalLayout.addWidget(self.dateEdit)
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.checkBox_2 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_2.setText("")
        self.checkBox_2.setObjectName("checkBox_2")
        self.horizontalLayout.addWidget(self.checkBox_2)
        self.dateEdit_2 = QtWidgets.QDateEdit(self.groupBox)
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.horizontalLayout.addWidget(self.dateEdit_2)
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.checkBox_3 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_3.setObjectName("checkBox_3")
        self.horizontalLayout.addWidget(self.checkBox_3)
        self.groupBox_2 = QtWidgets.QGroupBox(mytest)
        self.groupBox_2.setGeometry(QtCore.QRect(480, 10, 485, 52))
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_2.addWidget(self.lineEdit_2)
        self.label_5 = QtWidgets.QLabel(self.groupBox_2)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_2.addWidget(self.label_5)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout_2.addWidget(self.lineEdit_3)
        self.comboBox = QtWidgets.QComboBox(self.groupBox_2)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_2.addWidget(self.comboBox)
        self.checkBox_4 = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkBox_4.setObjectName("checkBox_4")
        self.horizontalLayout_2.addWidget(self.checkBox_4)
        self.pushButton = QtWidgets.QPushButton(mytest)
        self.pushButton.setGeometry(QtCore.QRect(980, 30, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(mytest)
        self.pushButton_2.setGeometry(QtCore.QRect(1070, 30, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.groupBox_3 = QtWidgets.QGroupBox(mytest)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 360, 1131, 471))
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.browser = QWebEngineView(mytest)
        self.browser.setGeometry(QtCore.QRect(10, 360, 1131, 471))
        self.browser.load(QUrl(
            'https://fp.jss.com.cn/#/platform/make?clientopenned=true'))
        self.groupBox_4 = QtWidgets.QGroupBox(mytest)
        # self.browser.page().profile().cookieStore().deleteAllCookies()
        self.browser.page().profile().clearHttpCache()
        self.groupBox_4.setGeometry(QtCore.QRect(10, 70, 1131, 61))
        self.groupBox_4.setObjectName("groupBox_4")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox_4)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_3.addWidget(self.lineEdit_4)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.horizontalLayout_3.addWidget(self.lineEdit_5)
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_3.addWidget(self.pushButton_3)
        self.groupBox_5 = QtWidgets.QGroupBox(mytest)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 140, 1131, 212))
        self.groupBox_5.setTitle("")
        self.groupBox_5.setObjectName("groupBox_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox_5)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.tableWidget = QtWidgets.QTableWidget(self.groupBox_5)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setHorizontalHeaderLabels(['往来户', '发票号', '开票日期', '发票金额', '币种', 'fpid'])
        self.tableWidget.hideColumn(5)
        self.horizontalLayout_4.addWidget(self.tableWidget)
        # self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget_2 = QtWidgets.QTableWidget(self.groupBox_5)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(5)
        self.tableWidget_2.setHorizontalHeaderLabels(['费用名称', '币种', '价格', '数量', '往来户'])
        self.tableWidget_2.hideColumn(4)
        self.horizontalLayout_4.addWidget(self.tableWidget_2)
        self.dateEdit.setEnabled(False)
        self.dateEdit_2.setEnabled(False)
        self.retranslateUi(mytest)
        self.checkBox.toggled['bool'].connect(self.dateEdit.setEnabled)
        self.checkBox_2.toggled['bool'].connect(self.dateEdit_2.setEnabled)
        # self.clicked_button=shujjuku2.main()
        self.pushButton.clicked.connect(self.clickButton)
        self.pushButton_2.clicked.connect(self.show_data)
        # 点击事件获取所选内容、行列
        self.tableWidget.cellPressed.connect(self.getPosContent)
        # self.tableWidget.itemClicked.connect(self.xxx)
        QtCore.QMetaObject.connectSlotsByName(mytest)
        self.tableWidget.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.s = self.tableWidget_2.rowCount()

    # 获取选中行列、内容
    def getPosContent(self, row):
        try:
            content = self.tableWidget.item(row, 5).text()
            kk = shujuku2.mains(content)
            self.tableWidget_2.setRowCount(len(kk))
            for i in range(0, len(kk)):
                for j in range(0, 5):
                    value = str(kk[i][j])
                    if (value == 'None'):
                        value = ' '
                    self.tableWidget_2.setItem(i, j, QTableWidgetItem(value))  # 设置j行i列的内容为Value
            print(kk)
        except:
            print('选中内容为空')

    def xxx(self):
        print("你是煞笔")

    def show_data(self, row):
        # 如果单元格对象为空
        try:
            self.tableWidget_2.update()
            rows = self.tableWidget_2.rowCount()
            moneylist = []
            for i in range(rows):
                thislist = []
                for k in range(5):
                    content = self.tableWidget_2.item(i, k).text()
                    thislist.append(content)
                moneylist.append(thislist)
            self.add_script(moneylist)
            print(moneylist)
        except:
            print('选中内容为空')

    def retranslateUi(self, mytest):
        _translate = QtCore.QCoreApplication.translate
        mytest.setWindowTitle(_translate("mytest", "Dialog"))
        self.groupBox.setTitle(_translate("mytest", "查询"))
        self.label.setText(_translate("mytest", "发票日期"))
        self.label_2.setText(_translate("mytest", "-"))
        self.label_3.setText(_translate("mytest", "往来户"))
        self.checkBox_3.setText(_translate("mytest", "已打印"))
        self.groupBox_2.setTitle(_translate("mytest", "设置"))
        self.label_4.setText(_translate("mytest", "汇率"))
        self.label_5.setText(_translate("mytest", "税率"))
        self.comboBox.setItemText(0, _translate("mytest", "电子发票"))
        self.comboBox.setItemText(1, _translate("mytest", "纸质发票"))
        self.checkBox_4.setText(_translate("mytest", "明细"))
        self.pushButton.setText(_translate("mytest", "查询"))
        self.pushButton_2.setText(_translate("mytest", "开始"))
        self.groupBox_4.setTitle(_translate("mytest", "备注"))
        self.pushButton_3.setText(_translate("mytest", "重置"))

    # .year() + "-" + self.dateEdit.date().month() + "-" + self.dateEdit.date().day()
    def clickButton(self):
        starDate = "",
        endDate = "",
        prinTed = "",
        custoMer = self.lineEdit.text()
        print(custoMer)
        if self.checkBox.isChecked():
            self.staryear = self.dateEdit.date().year()
            self.starmonth = self.dateEdit.date().month()
            self.starday = self.dateEdit.date().day()
            starDate = "'" + str(self.staryear) + "-" + str(self.starmonth) + "-" + str(self.starday) + "'"
            # print(self.starDate)
        if self.checkBox_2.isChecked():
            self.endyear = self.dateEdit_2.date().year()
            self.endmonth = self.dateEdit_2.date().month()
            self.endday = self.dateEdit_2.date().day()
            endDate = "'" + str(self.endyear) + "-" + str(self.endmonth) + "-" + str(self.endday) + "'"
            # print(self.endDate)
        if self.checkBox_3.isChecked():
            prinTed = "'true'"
        else:
            prinTed = "'false'"
        kk = shujuku2.main(starDate, endDate, prinTed)
        self.tableWidget.setRowCount(len(kk))
        for i in range(0, len(kk)):
            for j in range(0, 6):
                value = str(kk[i][j])
                if (value == 'None'):
                    value = ' '
                self.tableWidget.setItem(i, j, QTableWidgetItem(value))  # 设置j行i列的内容为Value
        print(kk)

    def add_scripts(self, thislist):
        print(type(thislist[1]))
        self.browser.page().runJavaScript('''let inputs =document.querySelector("#buyername");
//let lastValue = input.value;
inputs.value = '宁波知马国际物流有限公司';
let event = new Event('input', { bubbles: true });
let tracker = inputs._valueTracker;
if (tracker) {
  tracker.setValue('');//上面文章的原代码其实用的是 lastValue 参数，但是我觉得好像没啥用，就直接使用空字符串代替
}
inputs.dispatchEvent(event);''')

    def add_script(self, moneylist):
        chooseBox = self.comboBox.currentText()
        if chooseBox == '纸质发票':
            self.browser.page().runJavaScript('''document.querySelector("#invoiceLine > div > div > div").click();
//电子发票
//document.querySelector(".nuomiInvoiceFont.nuomi-icon-dianpu.inner-style.e-color").click()
//纸质发票
document.querySelector(".nuomiInvoiceFont.nuomi-icon-zhipu.inner-style.p-color").click();''')
        else:
            self.browser.page().runJavaScript(
                '''document.querySelector(".nuomiInvoiceFont.nuomi-icon-dianpu.inner-style.e-color").click();''')
        print(type(moneylist[0]))
        self.browser.page().runJavaScript('''
                      function getconames(){
                      let inputs =document.querySelector("#buyername");
                      //let lastValue = input.value;
                      inputs.value =''' + "'" + moneylist[0][4] + "'" + ''';
                      let event = new Event('input', { bubbles: true });
                      let tracker = inputs._valueTracker;
                      if (tracker) {
                        tracker.setValue('');//上面文章的原代码其实用的是 lastValue 参数，但是我觉得好像没啥用，就直接使用空字符串代替
                      }
                      inputs.dispatchEvent(event);
                      inputs.click();
                      setTimeout(() => {getconame(inputs)}, 600);};
                      function getconame(inputs){
                      var inpEle = inputs;
                      // 模拟回车
                      var events = document.createEvent('Event');
                      events.initEvent('keydown', true, false);   //注意这块触发的是keydown事件，在awx的ui源码中bind监控的是keypress事件，所以这块要改成keypress
                      events = Object.assign(events, {
                        ctrlKey: false,
                        metaKey: false,
                        altKey: false,
                        which: 13,
                        keyCode: 13,
                        key: 'Enter',
                        code: 'Enter'
                      });
                      inpEle.focus();
                      inpEle.dispatchEvent(events);};
                      getconames()''')
        for i in range(len(moneylist)):
            k = str(i + 1)
            self.browser.page().runJavaScript('''
                function getdingyi(){
                var inputs=new Array("#invoice-body > div.invoice-inner_1Z0ha > div.ant-table-wrapper.content_16ZIR > div > div > div > div > div.ant-table-body > table > tbody > tr:nth-child(''' + k + ''') > td:nth-child(2) > div > div > div > div > ul > li > div > input","#invoice-body > div.invoice-inner_1Z0ha > div.ant-table-wrapper.content_16ZIR > div > div > div > div > div.ant-table-body > table > tbody > tr:nth-child(''' + k + ''') > td:nth-child(5) > div > input","#invoice-body > div.invoice-inner_1Z0ha > div.ant-table-wrapper.content_16ZIR > div > div > div > div > div.ant-table-body > table > tbody > tr:nth-child(''' + k + ''') > td:nth-child(6) > div > input",);
                var values=new Array("''' + moneylist[i][0] + '''","''' + moneylist[i][3] + '''","''' + moneylist[i][2] + '''");
                let inputitem=document.querySelector(inputs[0]);
                inputitem.value=values[0];
                let event = new Event('input', { bubbles: true });
                let tracker = inputitem._valueTracker;
                if (tracker) {
                tracker.setValue('');//上面文章的原代码其实用的是 lastValue 参数，但是我觉得好像没啥用，就直接使用空字符串代替
                }
                inputitem.dispatchEvent(event);
                setTimeout(() => {getname()}, 600);
                setTimeout(() => {getnames(inputs,values)}, 900);
                };
                function getnames(inputs,values){
                for(var i = 1; i < inputs.length; i++){
                let inputitem=document.querySelector(inputs[i]);
                inputitem.value=values[i];
                let event = new Event('input', { bubbles: true });
                let tracker = inputitem._valueTracker;
                if (tracker) {
                tracker.setValue('');//上面文章的原代码其实用的是 lastValue 参数，但是我觉得好像没啥用，就直接使用空字符串代替
                }
                inputitem.dispatchEvent(event);
                if(i<4 &&i >0){
                document.querySelector("#invoice-body > div.invoice-inner_1Z0ha > div.ant-table-wrapper.content_16ZIR > div > div > div > div > div.ant-table-body > table > tbody > tr.ant-table-row.s-crt.ant-table-row-level-0 > td:nth-child(8) > div > div > div").click();
                }
                }};
                function getname(){
                var inpEle = document.querySelector("#invoice-body > div.invoice-inner_1Z0ha > div.ant-table-wrapper.content_16ZIR > div > div > div > div > div.ant-table-body > table > tbody > tr:nth-child(1) > td:nth-child(2) > div > div > div > div > ul > li > div > input");
                //inpEle.value = '宁波知马国际物流有限公司'  //仅仅是模拟回车，则不需要这样，这样给input框设置值也是不生效的，正确给input设置值的方式参考上面的
                // 模拟回车
                var events = document.createEvent('Event');
                events.initEvent('keydown', true, false);   //注意这块触发的是keydown事件，在awx的ui源码中bind监控的是keypress事件，所以这块要改成keypress
                events = Object.assign(events, {
                 ctrlKey: false,
                 metaKey: false,
                 altKey: false,
                 which: 13,
                 keyCode: 13,
                 key: 'Enter',
                 code: 'Enter'
                 });
                 inpEle.focus();
                 inpEle.dispatchEvent(events);};
                 setTimeout(() => {getdingyi()}, 600);
                 setTimeout(() => {document.querySelector("#invoice-body > div.invoice-inner_1Z0ha > div.ant-table-wrapper.content_16ZIR > div > div > div > div > div.ant-table-body > table > tbody > tr.ant-table-row.s-crt.ant-table-row-level-0 > td:nth-child(10) > div > li > i").click()},1200);
                 ''')
